# arg 1:  the new package version
post_install() {
  _rankmirrors
}

# arg 1:  the new package version
# arg 2:  the old package version
post_upgrade() {
	# one time stuff for md5sum issue with older pacman versions
	if [ "$(vercmp $2 3.0.2)" -lt 0 ]; then
		_resetbackups
	fi
	if [ "$(vercmp $2 3.1.0)" -lt 0 ]; then
		_upgrade310
	fi
}

_rankmirrors() {
  echo ">>> Use of the rankmirrors script on /etc/pacman.d/mirrorfile file is"
  echo ">>> highly recommended. Python is required, and read rankmirrors --help"
  echo ">>> for details. In addition, mirrors are now listed by country, so"
  echo ">>> move those that are geographically close to you to the top and"
  echo ">>> remove the others BEFORE running rankmirrors."
}

_resetbackups() {
	echo ">>> Performing one-time reset of NoUpgrade md5sums. After this reset"
	echo ">>> you are able to remove all NoUpgrade lines of already protected"
	echo ">>> files from pacman.conf."
	echo ">>>"

	# path variables
    pacconf="/etc/pacman.conf"
    dbpath="/var/lib/pacman/local"

    # get a list of NoUpgrade files from the user's pacman.conf
    echo ">>> Retrieving pacman.conf NoUpgrade list..."
    config=$(grep "^NoUpgrade" $pacconf | cut -d'=' -f2)
    # add the standard list of files, even if they are already above
    config="$config \
    etc/passwd etc/group etc/shadow etc/sudoers \
    etc/fstab etc/raidtab etc/ld.so.conf \
    etc/rc.conf etc/rc.local \
    etc/modprobe.conf etc/modules.conf \
    etc/lilo.conf boot/grub/menu.lst"

    # blank md5sum for use in sed expression
    zeroes='00000000000000000000000000000000'

    for file in $config; do
        echo ">>> -> finding owner of /$file..."
        line=$(LC_ALL=C LANG=C pacman -Qo /$file 2>/dev/null)
        # if file is owned by a package, go find its incorrectly stored sum
        if [ ! -z "$line" ]; then
            # get the name and version of the package owning file
            name=$(echo $line | awk '{print $5}')
            version=$(echo $line | awk '{print $6}')
            # set the path to the backup array holding the md5sum
            path="$dbpath/$name-$version/files"
            # run a sed on the path to reset the line containing $file
            # NOTE: literal tab characters in sed expression after $file
            echo ">>> -> resetting sum of /$file..."
            sed -i "s#$file [0-9a-fA-F]*#$file  $zeroes#" $path
        else
            echo ">>> -> $file is unowned."
        fi
    done
}

# TODO not used yet, we'll use it in later pacman upgrades
_cleanrequiredby() {
    dbpath="/var/lib/pacman/local"
    echo ">>> Cleaning out unnecessary requiredby entries from DB."
    echo ">>> -> making local DB backup at /tmp/pacmanDB.tgz..."
    bsdtar -czf /tmp/pacmanDB.tgz "$dbpath"
    echo ">>> -> removing entries..."
    grep -Rl REQUIREDBY /var/lib/pacman/local | xargs sed -i '/^%REQUIREDBY%/,/^$/ d'
    echo ">>> -> done."
}

_upgrade310() {
	# makepkg.conf syntax changed in 3.1
	echo ">>> The makepkg.conf syntax has changed, please note the new format"
	echo ">>> when merging the pacnew file with your old configuration."
	echo ">>>"
	# pacman.conf syntax changed in 3.1
	echo ">>> The pacman.conf default file has changed. Please update your"
	echo ">>> config to use the single mirrorlist, and any additional files"
	echo ">>> in /etc/pacman.d/ (core, extra, etc.) can be deleted."
	echo ">>>"
	# sync DB location changed in 3.1
	echo ">>> The location of sync DBs has moved from /var/lib/pacman/ to"
	echo ">>> /var/lib/pacman/sync/ for several reasons. To delete older"
	echo ">>> DBs, please run pacman -Sc and follow the instructions."
	echo ">>> You will also have to run pacman -Sy to refresh the sync DBs."
	echo ">>>"
	# abs is no longer included
	echo ">>> abs is no longer included; please install the 'abs' package"
	echo ">>> to use abs. You may need to edit abs.conf to re-enable repos."

}

op=$1
shift
$op $*
